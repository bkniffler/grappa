'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var version = '1.0.0-rc.11';

exports.default = function (options) {
  return function (req, context, callback) {
    var _options$endpointUrl = options.endpointUrl,
        endpointUrl = _options$endpointUrl === undefined ? '/graphql' : _options$endpointUrl,
        _options$displayOptio = options.displayOptions,
        displayOptions = _options$displayOptio === undefined ? {} : _options$displayOptio;

    var headersJS = options.headersJS ? options.headersJS : '{}';
    var body = '\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=utf-8 />\n        <meta name="viewport" content="user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui">\n        <title>GraphQL Voyager</title>\n        <style>\n          body {\n            padding: 0;\n            margin: 0;\n            width: 100%;\n            height: 100vh;\n            overflow: hidden;\n          }\n          #voyager {\n            height: 100vh;\n          }\n        </style>\n        <link rel="stylesheet"\n          href="//cdn.jsdelivr.net/npm/graphql-voyager@' + version + '/dist/voyager.css"\n        />\n        <script src="//cdn.jsdelivr.net/fetch/2.0.1/fetch.min.js"></script>\n        <script src="//cdn.jsdelivr.net/react/15.4.2/react.min.js"></script>\n        <script src="//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js"></script>\n        <script src="//cdn.jsdelivr.net/npm/graphql-voyager@' + version + '/dist/voyager.min.js"></script>\n      </head>\n      <body>\n        <main id="voyager">\n          <h1 style="text-align: center; color: #5d7e86;"> Loading... </h1>\n        </main>\n        <script>\n          window.addEventListener(\'load\', function(event) {\n            function introspectionProvider(introspectionQuery) {\n              return fetch(\'' + endpointUrl + '\', {\n                method: \'post\',\n                headers: Object.assign({}, {\n                  \'Accept\': \'application/json\',\n                  \'Content-Type\': \'application/json\',\n                }, ' + headersJS + '),\n                body: JSON.stringify({query: introspectionQuery }),\n                credentials: \'include\',\n              }).then(function (response) {\n                return response.text();\n              }).then(function (responseBody) {\n                try {\n                  return JSON.parse(responseBody);\n                } catch (error) {\n                  return responseBody;\n                }\n              });\n            }\n            GraphQLVoyager.init(document.getElementById(\'voyager\'), {\n              introspection: introspectionProvider,\n              displayOptions: ' + JSON.stringify(displayOptions) + ',\n            })\n          })\n        </script>\n      </body>\n    </html>\n  ';
    callback(null, {
      statusCode: 200,
      headers: {},
      body: body
    });
  };
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhY2thZ2VzL2FwaS92b3lhZ2VyLmVzNiJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwicmVxIiwiY29udGV4dCIsImNhbGxiYWNrIiwib3B0aW9ucyIsImVuZHBvaW50VXJsIiwiZGlzcGxheU9wdGlvbnMiLCJoZWFkZXJzSlMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YXR1c0NvZGUiLCJoZWFkZXJzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQU1BLFVBQVUsYUFBaEI7O2tCQUVlO0FBQUEsU0FBVyxVQUFDQyxHQUFELEVBQU1DLE9BQU4sRUFBZUMsUUFBZixFQUE0QjtBQUFBLCtCQUNNQyxPQUROLENBQzVDQyxXQUQ0QztBQUFBLFFBQzVDQSxXQUQ0Qyx3Q0FDOUIsVUFEOEI7QUFBQSxnQ0FDTUQsT0FETixDQUNsQkUsY0FEa0I7QUFBQSxRQUNsQkEsY0FEa0IseUNBQ0QsRUFEQzs7QUFFcEQsUUFBTUMsWUFBWUgsUUFBUUcsU0FBUixHQUFvQkgsUUFBUUcsU0FBNUIsR0FBd0MsSUFBMUQ7QUFDQSxRQUFNQyxtbUJBb0JpRFIsT0FwQmpELGlWQXlCc0RBLE9BekJ0RCxpWEFrQ3NCSyxXQWxDdEIsbU9BdUNhRSxTQXZDYiwwbUJBc0R3QkUsS0FBS0MsU0FBTCxDQUFlSixjQUFmLENBdER4Qix1RkFBTjtBQTZEQUgsYUFBUyxJQUFULEVBQWU7QUFDYlEsa0JBQVksR0FEQztBQUViQyxlQUFTLEVBRkk7QUFHYko7QUFIYSxLQUFmO0FBS0QsR0FyRWM7QUFBQSxDIiwiZmlsZSI6InBhY2thZ2VzL2FwaS92b3lhZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdmVyc2lvbiA9ICcxLjAuMC1yYy4xMSc7XG5cbmV4cG9ydCBkZWZhdWx0IG9wdGlvbnMgPT4gKHJlcSwgY29udGV4dCwgY2FsbGJhY2spID0+IHtcbiAgY29uc3QgeyBlbmRwb2ludFVybCA9ICcvZ3JhcGhxbCcsIGRpc3BsYXlPcHRpb25zID0ge30gfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGhlYWRlcnNKUyA9IG9wdGlvbnMuaGVhZGVyc0pTID8gb3B0aW9ucy5oZWFkZXJzSlMgOiAne30nO1xuICBjb25zdCBib2R5ID0gYFxuICAgIDwhRE9DVFlQRSBodG1sPlxuICAgIDxodG1sPlxuICAgICAgPGhlYWQ+XG4gICAgICAgIDxtZXRhIGNoYXJzZXQ9dXRmLTggLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cInVzZXItc2NhbGFibGU9bm8sIGluaXRpYWwtc2NhbGU9MS4wLCBtaW5pbXVtLXNjYWxlPTEuMCwgbWF4aW11bS1zY2FsZT0xLjAsIG1pbmltYWwtdWlcIj5cbiAgICAgICAgPHRpdGxlPkdyYXBoUUwgVm95YWdlcjwvdGl0bGU+XG4gICAgICAgIDxzdHlsZT5cbiAgICAgICAgICBib2R5IHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIH1cbiAgICAgICAgICAjdm95YWdlciB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgIH1cbiAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiXG4gICAgICAgICAgaHJlZj1cIi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vZ3JhcGhxbC12b3lhZ2VyQCR7dmVyc2lvbn0vZGlzdC92b3lhZ2VyLmNzc1wiXG4gICAgICAgIC8+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiLy9jZG4uanNkZWxpdnIubmV0L2ZldGNoLzIuMC4xL2ZldGNoLm1pbi5qc1wiPjwvc2NyaXB0PlxuICAgICAgICA8c2NyaXB0IHNyYz1cIi8vY2RuLmpzZGVsaXZyLm5ldC9yZWFjdC8xNS40LjIvcmVhY3QubWluLmpzXCI+PC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiLy9jZG4uanNkZWxpdnIubmV0L3JlYWN0LzE1LjQuMi9yZWFjdC1kb20ubWluLmpzXCI+PC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiLy9jZG4uanNkZWxpdnIubmV0L25wbS9ncmFwaHFsLXZveWFnZXJAJHt2ZXJzaW9ufS9kaXN0L3ZveWFnZXIubWluLmpzXCI+PC9zY3JpcHQ+XG4gICAgICA8L2hlYWQ+XG4gICAgICA8Ym9keT5cbiAgICAgICAgPG1haW4gaWQ9XCJ2b3lhZ2VyXCI+XG4gICAgICAgICAgPGgxIHN0eWxlPVwidGV4dC1hbGlnbjogY2VudGVyOyBjb2xvcjogIzVkN2U4NjtcIj4gTG9hZGluZy4uLiA8L2gxPlxuICAgICAgICA8L21haW4+XG4gICAgICAgIDxzY3JpcHQ+XG4gICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgZnVuY3Rpb24gaW50cm9zcGVjdGlvblByb3ZpZGVyKGludHJvc3BlY3Rpb25RdWVyeSkge1xuICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJyR7ZW5kcG9pbnRVcmx9Jywge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5hc3NpZ24oe30sIHtcbiAgICAgICAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgIH0sICR7aGVhZGVyc0pTfSksXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3F1ZXJ5OiBpbnRyb3NwZWN0aW9uUXVlcnkgfSksXG4gICAgICAgICAgICAgICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpO1xuICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZUJvZHkpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UocmVzcG9uc2VCb2R5KTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlQm9keTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgR3JhcGhRTFZveWFnZXIuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndm95YWdlcicpLCB7XG4gICAgICAgICAgICAgIGludHJvc3BlY3Rpb246IGludHJvc3BlY3Rpb25Qcm92aWRlcixcbiAgICAgICAgICAgICAgZGlzcGxheU9wdGlvbnM6ICR7SlNPTi5zdHJpbmdpZnkoZGlzcGxheU9wdGlvbnMpfSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSlcbiAgICAgICAgPC9zY3JpcHQ+XG4gICAgICA8L2JvZHk+XG4gICAgPC9odG1sPlxuICBgO1xuICBjYWxsYmFjayhudWxsLCB7XG4gICAgc3RhdHVzQ29kZTogMjAwLFxuICAgIGhlYWRlcnM6IHt9LFxuICAgIGJvZHlcbiAgfSk7XG59O1xuIl19
